# ============================================
# Build the files
# ============================================
FROM node AS builder

RUN mkdir -p /app/_dist
WORKDIR /app

ENV NODE_PATH=src

COPY yarn.lock /app/yarn.lock
COPY package.json /app/package.json
RUN yarn

COPY intl.buildlangs.js /app/intl.buildlangs.js
COPY static.config.js /app/static.config.js
COPY .babelrc /app/.babelrc

ARG GOOGLE_ANALYTICS
ENV GOOGLE_ANALYTICS=${GOOGLE_ANALYTICS}

ARG FEEDBACK_API
ENV FEEDBACK_API=${FEEDBACK_API}

ARG CMS_API
ENV CMS_API=${CMS_API}

ARG CMS_MEDIA
ENV CMS_MEDIA=${CMS_MEDIA}

COPY public /app/public
COPY src /app/src
RUN printenv
RUN yarn build

# ============================================
# Serve the built files
# ============================================
FROM openresty/openresty:alpine-fat AS official

COPY --from=builder /app/_dist /usr/local/openresty/nginx/html
COPY deploy/nginx.conf /etc/nginx/conf.d/default.conf
COPY deploy/docker-entrypoint.sh /usr/local/docker-entrypoint.sh

ENV PORT ${PORT:-80}
EXPOSE $PORT

ENTRYPOINT ["/usr/local/docker-entrypoint.sh"]
CMD ["/usr/local/openresty/bin/openresty", "-g", "daemon off;"]
